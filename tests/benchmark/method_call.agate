class Toggle {
  construct new(startState) {
    @state = startState
  }

  value { @state }
  activate {
    @state = !@state
    return this
  }
}

class NthToggle is Toggle {
  construct new(startState, maxCounter) {
    super(startState)
    @countMax = maxCounter
    @count = 0
  }

  activate {
    @count = @count + 1
    if (@count >= @countMax) {
      super.activate
      @count = 0
    }

    return this
  }
}

def start = System.clock
def n = 100000
def val = true
def toggle = Toggle.new(val)

for (i in 0...n) {
  val = toggle.activate.value
  val = toggle.activate.value
  val = toggle.activate.value
  val = toggle.activate.value
  val = toggle.activate.value
  val = toggle.activate.value
  val = toggle.activate.value
  val = toggle.activate.value
  val = toggle.activate.value
  val = toggle.activate.value
}

IO.println(toggle.value)

val = true
def ntoggle = NthToggle.new(val, 3)

for (i in 0...n) {
  val = ntoggle.activate.value
  val = ntoggle.activate.value
  val = ntoggle.activate.value
  val = ntoggle.activate.value
  val = ntoggle.activate.value
  val = ntoggle.activate.value
  val = ntoggle.activate.value
  val = ntoggle.activate.value
  val = ntoggle.activate.value
  val = ntoggle.activate.value
}

IO.println(ntoggle.value)
IO.println("elapsed: %(System.clock - start)")
