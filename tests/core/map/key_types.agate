def map = {
  nil: "null value",
  true: "true value",
  false: "false value",
  0: "zero",
  1.2: "1 point 2",
  'c': "character value",
  Array: "list class",
  "nil": "string value",
  (1..3): "1 to 3"
}

IO.println(map[nil]) # expect: null value
IO.println(map[true]) # expect: true value
IO.println(map[false]) # expect: false value
IO.println(map[0]) # expect: zero
IO.println(map[1.2]) # expect: 1 point 2
IO.println(map['c']) # expect: character value
IO.println(map[Array]) # expect: list class
IO.println(map["nil"]) # expect: string value
IO.println(map[1..3]) # expect: 1 to 3

IO.println(map.count) # expect: 9

# Use the same keys (but sometimes different objects) to ensure keys have the
# right equality semantics.
map[nil] = "new null value"
map[!false] = "new true value"
map[!true] = "new false value"
map[2 - 2] = "new zero"
map[1.2] = "new 1 point 2"
map["c".iterator_value(0)] = "new character value"
map[[].type] = "new list class"
map["ni" + "l"] = "new string value"
map[(3 - 2)..(1 + 2)] = "new 1 to 3"

IO.println(map[nil]) # expect: new null value
IO.println(map[true]) # expect: new true value
IO.println(map[false]) # expect: new false value
IO.println(map[0]) # expect: new zero
IO.println(map[1.2]) # expect: new 1 point 2
IO.println(map['c']) # expect: new character value
IO.println(map[Array]) # expect: new list class
IO.println(map["nil"]) # expect: new string value
IO.println(map[1..3]) # expect: new 1 to 3

IO.println(map.count) # expect: 9
