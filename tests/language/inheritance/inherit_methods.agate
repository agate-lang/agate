class Foo {
  method_on_foo { IO.println("foo") }
  method(a) { IO.println("foo") }
  method(a, b, c) { IO.println("foo") }
  override { IO.println("foo") }
}

class Bar is Foo {
  construct new() {}
  method_on_bar { IO.println("bar") }
  method(a, b) { IO.println("bar") }
  method(a, b, c, d) { IO.println("bar") }
  override { IO.println("bar") }
}

def bar = Bar.new()
bar.method_on_foo # expect: foo
bar.method_on_bar # expect: bar

# Methods with different arity do not shadow each other.
bar.method(1) # expect: foo
bar.method(1, 2) # expect: bar
bar.method(1, 2, 3) # expect: foo
bar.method(1, 2, 3, 4) # expect: bar
bar.override # expect: bar
